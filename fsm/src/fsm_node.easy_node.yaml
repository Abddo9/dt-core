description: |
    Note that this node publishes on many topics according to the configuration:

        for node_name, topic_name in nodes.items():
            self.pub_dict[node_name] = rospy.Publisher(topic_name, BoolStamped, ...)

parameters:
    states:
        desc: |
            States are the modes that the system can be in. Each state has corresponding events which trigger state transitions, as well as a list of active nodes in the current state.
        type: dict
        default: {}
    nodes:
        desc:
        type:
    global_transitions:
        desc: |
            These are the state transition events that can be triggered from all states.
        type: dict
        default: {}
    initial_state:
        desc: |
            This is the initial state that the FSM will be in upon launch of the node.
        type: str
        default: 'LANE_FOLLOWING'
    events:
        desc: |
            Events are triggered by certain topics, and allow for transitions between states
        type: dict
        default: {}

subscriptions: {}

publishers:
    mode:
        desc: |
        This topic gives the current state of the FSM, and can have values from a set of strings indicating the possible state names.
        topic: ~mode
        type: duckietown_msgs/FSMState
        queue_size: 1
        latch: true

contracts: {}

# We don't support services yet.
# TODO: add when done
# services:
#     set_state:
#         topic: ~set_state
#         type: duckietown_msgs/SetFSMState
